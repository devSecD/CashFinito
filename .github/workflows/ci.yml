name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_pgsql
        coverage: none

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      working-directory: ./backend

    - name: Install Dependencies
      run: composer install --prefer-dist --no-progress --no-interaction
      working-directory: ./backend

    - name: Generate key
      run: php artisan key:generate
      working-directory: ./backend

    - name: Execute tests
      run: php artisan test
      working-directory: ./backend
      env:
        DB_CONNECTION: pgsql
        DB_HOST: localhost
        DB_PORT: 5432
        DB_DATABASE: postgres
        DB_USERNAME: postgres
        DB_PASSWORD: password

  test-frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'

    - name: Install Dependencies
      run: npm ci
      working-directory: ./frontend

    - name: Run Linter
      run: npm run lint
      working-directory: ./frontend

    - name: Build Frontend
      run: npm run build
      working-directory: ./frontend